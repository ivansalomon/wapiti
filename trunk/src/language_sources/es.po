# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR 2009-2013 Nicolas SURRIBAS
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Wapiti SVN\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-08-25 17:33+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../vulnerability.py:23
msgid "  Evil url: {0}"
msgstr ""

#: ../vulnerability.py:24
msgid "{0} in {1} via injection in the parameter {2}"
msgstr ""

#: ../vulnerability.py:25
msgid "  coming from {0}"
msgstr ""

#: ../vulnerability.py:26
msgid "{0} in {1} via injection in the query string"
msgstr ""

#: ../vulnerability.py:27
msgid "{0} in {1} via injection in the resource path"
msgstr ""

#: ../vulnerability.py:28
msgid "Involved parameter: {0}"
msgstr ""

#: ../vulnerability.py:29
msgid "Evil request:"
msgstr ""

#: ../vulnerability.py:67
msgid "SQL Injection"
msgstr ""

#: ../vulnerability.py:68
msgid "Blind SQL Injection"
msgstr ""

#: ../vulnerability.py:69
msgid "File Handling"
msgstr ""

#: ../vulnerability.py:70
msgid "Cross Site Scripting"
msgstr ""

#: ../vulnerability.py:71
msgid "CRLF"
msgstr ""

#: ../vulnerability.py:72
msgid "Commands execution"
msgstr ""

#: ../vulnerability.py:73
msgid "Htaccess Bypass"
msgstr ""

#: ../vulnerability.py:74
msgid "Backup file"
msgstr ""

#: ../vulnerability.py:75
msgid "Potentially dangerous file"
msgstr ""

#: ../vulnerability.py:80
msgid "Internal Server Error"
msgstr ""

#: ../vulnerability.py:81
msgid "Resource consumption"
msgstr ""

#: ../vulnerability.py:83
msgid "Received a HTTP 500 error in {0}"
msgstr ""

#: ../vulnerability.py:84
msgid "Timeout occured in {0}"
msgstr ""

#: ../vulnerability.py:86
msgid "The request timed out while attempting to inject a payload in the query string"
msgstr ""

#: ../vulnerability.py:87
msgid "The request timed out while attempting to inject a payload in the resource path"
msgstr ""

#: ../vulnerability.py:88
msgid "The request timed out while attempting to inject a payload in the parameter {0}"
msgstr ""

#: ../vulnerability.py:90
msgid "The server responded with a 500 HTTP error code while attempting to inject a payload in the query string"
msgstr ""

#: ../vulnerability.py:92
msgid "The server responded with a 500 HTTP error code while attempting to inject a payload in the resource path"
msgstr ""

#: ../vulnerability.py:94
msgid "The server responded with a 500 HTTP error code while attempting to inject a payload in the parameter {0}"
msgstr ""

#: ../wapiti.py:69
msgid "Invalid argument for option {0} : {1}"
msgstr ""

#: ../wapiti.py:226
msgid "[*] Loading modules:"
msgstr ""

#: ../wapiti.py:297
msgid "No links or forms found in this page !"
msgstr ""

#: ../wapiti.py:298
msgid "Make sure the url is correct."
msgstr ""

#: ../wapiti.py:310
msgid "[!] Missing dependecies for module {0}:"
msgstr ""

#: ../wapiti.py:316
msgid "[+] Launching module {0}"
msgstr ""

#: ../wapiti.py:321
msgid "Upload scripts found:"
msgstr ""

#: ../wapiti.py:335
msgid "Report"
msgstr ""

#: ../wapiti.py:337
msgid "A report has been generated in the file {0}"
msgstr ""

#: ../wapiti.py:339
msgid "Open {0}/index.html with a browser to see this report."
msgstr ""

#: ../wapiti.py:410
msgid "wapitiDoc"
msgstr ""

#: ../wapiti.py:418
msgid "Wapiti-SVN (wapiti.sourceforge.net)"
msgstr ""

#: ../wapiti.py:549
msgid "File {0} loaded. Wapiti will use it to perform the attack"
msgstr ""

#: ../wapiti.py:551
msgid "File {0} not found.Wapiti will scan the web site again"
msgstr ""

#: ../wapiti.py:560
msgid "Attack process interrupted.To perform again the attack,lauch Wapiti with \"-i\" or \"-k\" parameter."
msgstr ""

#: ../attack/attack.py:166
msgid "+ attackGET {0}"
msgstr ""

#: ../attack/attack.py:171 ../attack/attack.py:185
#: ../attack/mod_permanentxss.py:87 ../attack/mod_permanentxss.py:89
#: ../attack/mod_permanentxss.py:147 ../attack/mod_permanentxss.py:272
msgid "error: {0} while attacking {1}"
msgstr ""

#: ../attack/attack.py:173 ../attack/attack.py:187
msgid "error: timeout while attacking {0}"
msgstr ""

#: ../attack/attack.py:180
msgid "+ attackPOST {0} from {1}"
msgstr ""

#: ../attack/mod_backup.py:89
msgid "Found backup file !"
msgstr ""

#: ../attack/mod_backup.py:94
msgid "Backup file {0} found for {1}"
msgstr ""

#: ../attack/mod_blindsql.py:40
msgid "Blind SQL vulnerability"
msgstr ""

#: ../attack/mod_blindsql.py:93 ../attack/mod_file.py:146
#: ../attack/mod_sql.py:131
msgid "{0} via injection in the query string"
msgstr ""

#: ../attack/mod_blindsql.py:141 ../attack/mod_blindsql.py:222
#: ../attack/mod_exec.py:195 ../attack/mod_exec.py:292
#: ../attack/mod_file.py:211 ../attack/mod_file.py:301
#: ../attack/mod_sql.py:258
msgid "{0} via injection in the parameter {1}"
msgstr ""

#: ../attack/mod_crlf.py:31
msgid "CRLF injection"
msgstr ""

#: ../attack/mod_crlf.py:70 ../attack/mod_crlf.py:77
msgid "(QUERY_STRING)"
msgstr ""

#: ../attack/mod_crlf.py:121
msgid "Error: The server did not understand this request"
msgstr ""

#: ../attack/mod_exec.py:45
msgid "Command execution"
msgstr ""

#: ../attack/mod_exec.py:48
msgid "PHP evaluation"
msgstr ""

#: ../attack/mod_exec.py:51 ../attack/mod_exec.py:54
msgid "Warning exec"
msgstr ""

#: ../attack/mod_exec.py:57 ../attack/mod_exec.py:63
msgid "preg_replace injection"
msgstr ""

#: ../attack/mod_exec.py:60
msgid "Warning usort()"
msgstr ""

#: ../attack/mod_exec.py:66
msgid "Warning assert"
msgstr ""

#: ../attack/mod_exec.py:69
msgid "Evalutation warning"
msgstr ""

#: ../attack/mod_file.py:40
msgid "Remote inclusion vulnerability"
msgstr ""

#: ../attack/mod_file.py:41
msgid "Linux local file disclosure vulnerability"
msgstr ""

#: ../attack/mod_file.py:42
msgid "BSD local file disclosure vulnerability"
msgstr ""

#: ../attack/mod_file.py:43
msgid "Windows local file disclosure vulnerability"
msgstr ""

#: ../attack/mod_file.py:44 ../attack/mod_file.py:45
msgid "File disclosure vulnerability in include_path"
msgstr ""

#: ../attack/mod_file.py:46
msgid "highlight_file() vulnerability in basedir"
msgstr ""

#: ../attack/mod_file.py:47
msgid "include() of file in include_path"
msgstr ""

#: ../attack/mod_file.py:84
msgid "Possible {0} vulnerability"
msgstr ""

#: ../attack/mod_htaccess.py:75
msgid "HtAccess protection found: {0}"
msgstr ""

#: ../attack/mod_htaccess.py:85
msgid "|HTTP Code: {0} : {1}"
msgstr ""

#: ../attack/mod_htaccess.py:88 ../attack/mod_htaccess.py:102
msgid "Source code:"
msgstr ""

#: ../attack/mod_htaccess.py:94
msgid "{0} HtAccess"
msgstr ""

#: ../attack/mod_htaccess.py:95
msgid "  .htaccess bypass vulnerability: {0}"
msgstr ""

#: ../attack/mod_htaccess.py:99
msgid "|HTTP Code: {0}"
msgstr ""

#: ../attack/mod_nikto.py:75
msgid "Problem with local nikto database."
msgstr ""

#: ../attack/mod_nikto.py:76
msgid "Downloading from the web..."
msgstr ""

#: ../attack/mod_nikto.py:90
msgid "Error downloading Nikto database"
msgstr ""

#: ../attack/mod_nikto.py:235 ../attack/mod_nikto.py:237
msgid "References:"
msgstr ""

#: ../attack/mod_permanentxss.py:57
msgid "Stored XSS vulnerability"
msgstr ""

#: ../attack/mod_permanentxss.py:115 ../attack/mod_permanentxss.py:161
msgid "Found permanent XSS in {0} with {1}"
msgstr ""

#: ../attack/mod_permanentxss.py:213 ../attack/mod_permanentxss.py:280
msgid "Found permanent XSS attacked by {0} with fields {1}"
msgstr ""

#: ../attack/mod_sql.py:39 ../attack/mod_sql.py:41
msgid "MySQL Injection"
msgstr ""

#: ../attack/mod_sql.py:43
msgid "Access-Based SQL Injection"
msgstr ""

#: ../attack/mod_sql.py:45 ../attack/mod_sql.py:47 ../attack/mod_sql.py:49
#: ../attack/mod_sql.py:70
msgid "MSSQL-Based Injection"
msgstr ""

#: ../attack/mod_sql.py:52
msgid "Java.SQL Injection"
msgstr ""

#: ../attack/mod_sql.py:54
msgid "PostgreSQL Injection"
msgstr ""

#: ../attack/mod_sql.py:56 ../attack/mod_sql.py:58
msgid "XPath Injection"
msgstr ""

#: ../attack/mod_sql.py:60
msgid "LDAP Injection"
msgstr ""

#: ../attack/mod_sql.py:62
msgid "DB2 Injection"
msgstr ""

#: ../attack/mod_sql.py:64
msgid "Interbase Injection"
msgstr ""

#: ../attack/mod_sql.py:66
msgid "Sybase Injection"
msgstr ""

#: ../attack/mod_sql.py:68
msgid ".NET SQL Injection"
msgstr ""

#: ../attack/mod_sql.py:72
msgid "Acess-Based SQL Injection"
msgstr ""

#: ../attack/mod_sql.py:76
msgid "Oracle Injection"
msgstr ""

#: ../attack/mod_xss.py:59
msgid "XSS vulnerability"
msgstr ""

#: ../attack/mod_xss.py:126 ../attack/mod_xss.py:337
msgid "XSS vulnerability found via injection in the resource path"
msgstr ""

#: ../attack/mod_xss.py:196
msgid "XSS vulnerability found via injection in the query string"
msgstr ""

#: ../attack/mod_xss.py:270 ../attack/mod_xss.py:437
msgid "XSS vulnerability found via injection in the parameter {0}"
msgstr ""

#: ../net/getcookie.py:97
msgid "No forms found in this page !"
msgstr ""

#: ../net/getcookie.py:104
msgid "Choose the form you want to use :"
msgstr ""

#: ../net/getcookie.py:113
msgid "Enter a number : "
msgstr ""

#: ../net/getcookie.py:120
msgid "Please enter values for the following form: "
msgstr ""

#: ../net/getcookie.py:121
msgid "url = {0}"
msgstr ""

#: ../net/cookie.py:75
msgid "Error getting url {0}"
msgstr ""

#: ../net/lswww.py:164
msgid "First argument must be the root url !"
msgstr ""

#: ../net/lswww.py:169
msgid "Invalid protocol: {0}"
msgstr ""

#: ../net/lswww.py:208
msgid "Invalid link argument: {0}"
msgstr ""

#: ../net/lswww.py:266
msgid "Connection refused!"
msgstr ""

#: ../net/lswww.py:270
msgid "Exception in lswww.browse: {0}"
msgstr ""

#: ../net/lswww.py:665
msgid "File {0} loaded, the scan continues:"
msgstr ""

#: ../net/lswww.py:667
msgid " * URLs to browse"
msgstr ""

#: ../net/lswww.py:670
msgid " * URLs browsed"
msgstr ""

#: ../net/lswww.py:674
msgid "File {0} not found, Wapiti will scan again the web site"
msgstr ""

#: ../net/lswww.py:707 ../net/lswww.py:715
msgid " Notice"
msgstr ""

#: ../net/lswww.py:709
msgid "This scan has been saved in the file {0}/{1}.xml"
msgstr ""

#: ../net/lswww.py:711
msgid "You can use it to perform attacks without scanning again the web site with the \"-k\" parameter"
msgstr ""

#: ../net/lswww.py:717
msgid "Scan stopped, the data has been savedin the file {0}/{1}.xml"
msgstr ""

#: ../net/lswww.py:719
msgid "To continue this scan, you should launch Wapiti with the \"-i\" parameter"
msgstr ""

#: ../net/lswww.py:729
msgid "URLs"
msgstr ""

#: ../net/lswww.py:736
msgid "Forms Info"
msgstr ""

#: ../net/lswww.py:738
msgid "From: {0}"
msgstr ""

#: ../net/lswww.py:739
msgid "To: {0}"
msgstr ""

#: ../net/lswww.py:747
msgid "Upload Scripts"
msgstr ""

#: ../net/lswww.py:1008
msgid "Forms"
msgstr ""

#: ../net/lswww.py:1011
msgid "Form {0}"
msgstr ""

#: ../net/lswww.py:1015
msgid " * Method:  {0}"
msgstr ""

#: ../net/lswww.py:1016
msgid " * Intputs:"
msgstr ""

#: ../net/lswww.py:1021
msgid " * Selects:"
msgstr ""

#: ../net/lswww.py:1026
msgid " * TextAreas:"
msgstr ""

#: ../net/lswww.py:1032
msgid "URLS"
msgstr ""

#: ../report/txtreportgenerator.py:69
msgid "Report for {0}\n"
msgstr ""

#: ../report/txtreportgenerator.py:70
msgid "Date of the scan : {0}\n"
msgstr ""

#: ../report/txtreportgenerator.py:72
msgid "Scope of the scan : {0}\n"
msgstr ""

#: ../report/txtreportgenerator.py:75
msgid "Summary of vulnerabilities :"
msgstr ""

#: ../report/txtreportgenerator.py:78
msgid "{0} : {1:>3}\n"
msgstr ""

#: ../report/txtreportgenerator.py:88 ../report/txtreportgenerator.py:105
msgid "Evil request:\n"
msgstr ""

#: ../report/txtreportgenerator.py:91
msgid "cURL command PoC : \"{0}\""
msgstr ""

#: ../report/txtreportgenerator.py:97
msgid "Anomalies found:"
msgstr ""

#: ../wapiti.py:560 ../wapiti.py:559
msgid "Attack process interrupted. To perform again the attack, lauch Wapiti with \"-i\" or \"-k\" parameter."
msgstr ""

#: ../wapiti.py:551
msgid "File {0} not found. Wapiti will scan the web site again"
msgstr ""

msgid "[!] Unable to find a module named {0}"
msgstr "[!] Impossible de trouver le module {0}"

msgid "Backup file description"
msgstr ""
"It may be possible to find backup files of scripts on the webserver that "
"thewebadmin put here to save a previous version or backup files that are "
"automaticallygenerated by the software editor used (like for example Emacs). "
"These copies may revealinteresting informations like source code or "
"credentials"

msgid "Backup file solution"
msgstr ""
"The webadmin must manually delete the backup files or remove it from the web "
"root. He shouldalso reconfigure its editor to deactivate automatic backups"

msgid "Blind SQL Injection description"
msgstr ""
"Blind SQL injection is a technique that exploits a vulnerability occurring "
"in the database of an application. This kind of vulnerability is harder to "
"detect than basic SQL injections because no error message will be displayed "
"on the webpage."

msgid "Blind SQL Injection solution"
msgstr ""
"To protect against SQL injection, user input must not directly be embedded "
"in SQL statements. Instead, user input must be escaped or filtered or "
"parameterized statements must be used."

msgid "Commands execution description"
msgstr ""
"This attack consists in executing system commands on the server. The "
"attacker tries to inject this commands in the request parameters"

msgid "Commands execution solution"
msgstr "Prefer working without user input when using file system calls"

msgid "CRLF description"
msgstr ""
"The term CRLF refers to Carriage Return (ASCII 13, \\r) Line Feed (ASCII 10, "
"\\n). They're used to note the termination of a line, however, dealt with "
"differently in today’s popular Operating Systems. For example: in Windows "
"both a CR and LF are required to note the end of a line, whereas in Linux/"
"UNIX a LF is only required. This combination of CR and LR is used for "
"example when pressing 'Enter' on the keyboard. Depending on the application "
"being used, pressing 'Enter' generally instructs the application to start a "
"new line, or to send a command."

msgid "CRLF solution"
msgstr ""
"Check the submitted parameters and do not allow CRLF to be injected by "
"filtering CRLF"

msgid "Cross Site Scripting description"
msgstr ""
"Cross-site scripting (XSS) is a type of computer security vulnerability "
"typically found in web applications which allow code injection by malicious "
"web users into the web pages viewed by other users. Examples of such code "
"include HTML code and client-side scripts."

msgid "Cross Site Scripting solution"
msgstr ""
"The best way to protect a web application from XSS attacks is ensure that "
"the application performs validation of all headers, cookies, query strings, "
"form fields, and hidden fields. Encoding user supplied output in the server "
"side can also defeat XSS vulnerabilities by preventing inserted scripts from "
"being transmitted to users in an executable form. Applications can gain "
"significant protection from javascript based attacks by converting the "
"following characters in all generated output to the appropriate HTML entity "
"encoding:  &lt;, &gt;, &amp;, &quot;, ', (, ), #, %, ; , +, -."

msgid "File Handling description"
msgstr ""
"This attack is also known as Path Transversal or Directory Transversal, its "
"aim is the access to files and directories that are stored outside the web "
"root folder. The attacker tries to explore the directories stored in the web "
"server. The attacker uses some techniques, for instance, the manipulation of "
"variables that reference files with 'dot-dot-slash (../)' sequences and its "
"variations to move up to root directory to navigate through the file system."

msgid "File Handling solution"
msgstr ""
"Prefer working without user input when using file system calls. Use "
"indexes rather than actual portions of file names when templating or using "
"language files (eg: value 5 from the user submission = Czechoslovakian, "
"rather than expecting the user to return 'Czechoslovakian'). Ensure the "
"user cannot supply all parts of the path – surround it with your path code. "
"Validate the user’s input by only accepting known good – do not sanitize "
"the data. Use chrooted jails and code access policies to restrict where "
"the files can be obtained or saved to."

msgid "Htaccess bypass description"
msgstr ""
"htaccess files are used to restrict access to some files or HTTP method. In "
"some case it may be possible to bypass this restriction and access the files."

msgid "Htaccess bypass solution"
msgstr "Make sure every HTTP method is forbidden if the credentials are bad."

msgid "Internal server error description"
msgstr "An error occured on the server's side, preventing it to process the request. It may be the sign of a vulnerability"

msgid "Internal server error solution"
msgstr "More information about the error should be find in the server logs."

msgid "Potentially dangerous file description"
msgstr "A file with potential vulnérabilities as been found on the website"

msgid "Potentially dangerous file solution"
msgstr "Make sure the script is up-to-date and restrict access to it if possible"

msgid "Resource consumption description"
msgstr "It took an abnormal time to the server to respond to a query. An attacker might leverage this kind of weakness to overload the server"

msgid "Resource consumption solution"
msgstr "The involved script is maybe using the server resources (CPU, memory, network, file access...) in a non-efficient way"

msgid "SQL Injection description"
msgstr ""
"SQL injection vulnerabilities allow an attacker to alter the queries executed on the backend database. "
"An attacker may then be able to extract or modify informations stored in the database or even escalate his privileges on the system."

msgid "SQL Injection solution"
msgstr ""
"To protect against SQL injection, user input must not directly be embedded "
"in SQL statements. Instead, user input must be escaped or filtered or "
"parameterized statements must be used."

